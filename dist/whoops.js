/**
 * whoops - It makes simple throw qualified errors.
 * @version v1.1.1
 * @link    https://github.com/Kikobeats/whoops
 * @license MIT
 */require=function e(r,t,n){function a(s,c){if(!t[s]){if(!r[s]){var u="function"==typeof require&&require;if(!c&&u)return u(s,!0);if(o)return o(s,!0);var i=new Error("Cannot find module '"+s+"'");throw i.code="MODULE_NOT_FOUND",i}var f=t[s]={exports:{}};r[s][0].call(f.exports,function(e){var t=r[s][1][e];return a(t?t:e)},f,f.exports,e,r,t,n)}return t[s].exports}for(var o="function"==typeof require&&require,s=0;s<n.length;s++)a(n[s]);return a}({1:[function(e,r,t){"use strict";r.exports=Error.captureStackTrace||function(e){var r=new Error;Object.defineProperty(e,"stack",{configurable:!0,get:function(){var e=r.stack;return Object.defineProperty(this,"stack",{value:e}),e}})}},{}],whoops:[function(require,module,exports){"use strict";function inherits(e,r){e.super_=r,e.prototype=Object.create(r.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function Factory(e,r){return function(t){var n=new e;return"object"==typeof t?FACTORY.OBJECT(n,t):r(n,arguments)}}var captureStackTrace=require("capture-stack-trace"),FACTORY={OBJECT:function(e,r){return Object.keys(r).forEach(function(t){var n=r[t];e[t]=n}),"function"==typeof e.message&&(e.message=e.message()),e.code&&(e.message=e.code+", "+e.message),e},STRING:function(e,r){var t={3:function(){return e.name=r[0],e.code=r[1],e.message=e.code+", "+r[2],e.message},2:function(){return e.name=r[0],e.message=r[1],e.message},1:function(){return e.message=r[0],e.message},0:function(){}};return t[r.length](),e},STRING_NONAME:function(e,r){var t={2:function(){return e.code=r[0],e.message=e.code+", "+r[1],e.message},1:function(){return e.message=r[0],e.message},0:function(){}};return t[r.length](),e}};module.exports=Factory(Error,FACTORY.STRING),module.exports.create=function(className){if("string"!=typeof className)throw new TypeError("Expected className to be a string");if(/[^0-9a-zA-Z_$]/.test(className))throw new Error("className contains invalid characters");var ErrorClass=eval("(function "+className+"() { captureStackTrace(this, this.constructor); })");return inherits(ErrorClass,Error),ErrorClass.prototype.name=className,Factory(ErrorClass,FACTORY.STRING_NONAME)}},{"capture-stack-trace":1}]},{},[]);